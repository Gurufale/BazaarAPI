version: '3.6'
services:
  #Mysql Configuration
  mysql:
    image: "mysql:8.0"
    container_name: mysql
    restart: always
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=JulyNewCode@2023
      - MYSQL_USER=root
      - MYSQL_PASSWORD=JulyNewCode@2023
      - MYSQL_DATABASE=bazaar_db
    ports:
      - "3307:3306"
    expose:
      - 3307

  zoo11:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo11
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888


  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka11
    ports:
        - "9092:9092"
        - "29092:29092"
    environment:
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
        KAFKA_BROKER_ID: 1
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
        KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
        KAFKA_NUM_PARTITIONS: 3
    depends_on:
        - zoo11

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    container_name: kafka21
    ports:
        - "9093:9093"
        - "29093:29093"
    environment:
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
        KAFKA_BROKER_ID: 2
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
        KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
        KAFKA_NUM_PARTITIONS: 3
    depends_on:
        - zoo11


  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka3
    container_name: kafka31
    ports:
        - "9094:9094"
        - "29094:29094"
    environment:
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
        KAFKA_BROKER_ID: 3
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
        KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
        KAFKA_NUM_PARTITIONS: 3
    depends_on:
        - zoo11

  api-gateway:
    image: anpgn/apigateway-layered:latest
    container_name: apigateway-layered
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE

  product-service:
      image: anpgn/productservice-layered
      container_name: productservice-layered
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      depends_on:
        - mysql
        - api-gateway

  user-service:
    image: anpgn/userlayered
    container_name: userlayered
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - kafka1
      - kafka2
      - kafka3

  referral-service:
    image: anpgn/referral-layered
    container_name: referral-layered
    environment:
      - SPRING_PROFILE_ACTIVE=docker
    depends_on:
      - mysql
      - kafka1
      - kafka2
      - kafka3
      - api-gateway
      - user-service

  cart-service:
      image: anpgn/cartservice-layered
      container_name: cartservice-layered
      environment:
        - SPRING_PROFILE_ACTIVE=docker
      depends_on:
        - mysql
        - kafka1
        - kafka2
        - kafka3
        - api-gateway
        - user-service
        - product-service





